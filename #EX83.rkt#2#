#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 70 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 148 0 211 0 0 0 -1
-1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 0 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 1181 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 177
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |#EX83|) "
 #"(read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constru"
 #"ctor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/math"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"editor"
0 0 24 3 2 #" ["
0 0 14 3 3 #"pre"
0 0 24 3 1 #" "
0 0 14 3 4 #"post"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 17 3 27 #"; An Editor is a structure:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";   (make-editor String String)"
0 0 24 29 1 #"\n"
0 0 17 3 54 #"; interpretation (make-editor s t) describes an editor"
0 0 24 29 1 #"\n"
0 0 17 3 49 #"; whose visible text is (string-append s t) with "
0 0 24 29 1 #"\n"
0 0 17 3 38 #"; the cursor displayed between s and t"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #"; sig: editor -> image (with text and a line)"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; render should consume an editor and create an image"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hali\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"tosis\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"overlay/align"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 1 #" "
0 0 19 3 8 #"\"center\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"hali\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"tosis\""
0 0 24 3 1 #" "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; string -> string"
0 0 24 29 1 #"\n"
0 0 17 3 53 #"; Takes a string and returns the first character only"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"b\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"b\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"tomato\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"t\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string-first"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #"; string ->string"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; gives everything but the first letter of a string"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"word"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blah\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"lah\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"tomato\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"omato\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"0\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-rest"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 18 #"; string -> string"
0 0 24 29 1 #"\n"
0 0 17 3 47 #"; string-last gives the last letter of a string"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blah\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"h\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"tomato\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"o\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"string-last"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 17 3 30 #"; string -> string-remove-last"
0 0 24 29 1 #"\n"
0 0 17 3 50 #"; gives back the string without the last character"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"substring"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 4 #"word"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 2 #"\"\""
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"blah\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"bla\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"tomato\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"tomat\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"y\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 2 #") "
0 0 19 3 2 #"\"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #"; editor ke -> bool"
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #"; Accepts the current editor status and ke and returns true if anyth"
 #"ing should be done to the image."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 4 #")) ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 4 #")) ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 11 #"image-width"
0 0 24 3 2 #" ("
0 0 14 3 6 #"render"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")) "
0 0 21 3 3 #"200"
0 0 24 3 3 #")) "
0 0 17 3 42 #";acceptable key to add and room to add it."
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 5 #")   ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 5 #")))) "
0 0 17 3 27 #"; left, right or backspace."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 36 #"\"slalsdkfja;ldskj fa;lsdkjf alsdk f\""
0 0 24 3 1 #" "
0 0 19 3 21 #"\"aksdflaskdjfasdklf \""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"t\""
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"stan\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"lee\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 2 #" )"
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"stan\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"lee\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 2 #" )"
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"st\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"lee\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"p\""
0 0 24 3 3 #" ) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"stan\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"lee\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"stan\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"lee\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";editor ed and keyEvent ke, and produces a new editor."
0 0 24 29 1 #"\n"
0 0 17 3 103
(
 #";it adds keys to the end of the pre field. Backspace removes the las"
 #"t of pre. It ignores tab and return"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 12 #"accept-input"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (["
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #"] ("
0 0 14 3 11 #"make-editor"
0 0 24 3 2 #" ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 4 #")) ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (["
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #"] ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 18 #"string-remove-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")) "
0 0 17 3 12 #";shorten pre"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"string-last"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 3 #")) "
0 0 17 3 30 #"; last letter from pre plus..."
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 7 #"))     "
0 0 17 3 5 #";post"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                               ))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (["
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #"] ("
0 0 14 3 11 #"make-editor"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 13 #"string-append"
0 0 24 3 2 #" ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 12 #"string-first"
0 0 24 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 4 #"))) "
0 0 17 3 13 #";lengthen pre"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"string-rest"
0 0 24 3 2 #" ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 20 #"))))                "
0 0 17 3 13 #";shorten post"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      (["
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #"] ("
0 0 14 3 11 #"make-editor"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"editor-pre"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 2 #") "
0 0 14 3 2 #"ke"
0 0 24 3 14 #")             "
0 0 17 3 4 #";pre"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 11 #"editor-post"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 17 #"))))             "
0 0 17 3 91
(
 #";post            (substring (editor-post ed) 1)))    ;shorten post  "
 #"                       "
) 0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 14 3 2 #"ed"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\" \""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 14 #"firstletters \""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"q\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"firstlettersq\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\b\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"firstletter\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\t\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 4 #"\"\\r\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 8 #"\"cancel\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"clear\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"start\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 5 #"\"end\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"home\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"w\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"firstlettersw\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"e\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"firstletterse\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 3 #"\"r\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"firstlettersr\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"firstletter\""
0 0 24 3 1 #" "
0 0 19 3 7 #"\"slast\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 4 #"edit"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"firstletters\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"last\""
0 0 24 3 2 #") "
0 0 19 3 7 #"\"right\""
0 0 24 3 3 #") ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"firstlettersl\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"ast\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";editor ->image"
0 0 24 29 1 #"\n"
0 0 17 3 51 #"; Consumes and editor and draws the text situation."
0 0 24 29 1 #"\n"
0 0 17 3 26 #"; WorldState -> WorldState"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"main"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 2 #"ed"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ["
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 4 #"edit"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ["
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 6 #"render"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #"; pre for editor -> editing function running"
0 0 24 29 1 #"\n"
0 0 17 3 40 #"; Consumes a pre and starts the project."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 14 3 3 #"pre"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"main"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-editor"
0 0 24 3 1 #" "
0 0 14 3 3 #"pre"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 3 #"run"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"start\""
0 0 24 3 1 #")"
0           0
