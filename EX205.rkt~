;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-abbr-reader.ss" "lang")((modname EX205) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/itunes)


(define ITUNES-LOCATION "/Users/joesessions/RacketWork/MusicLibrary2.xml")
 
; LLists
(define list-tracks
  (read-itunes-as-lists ITUNES-LOCATION))


; An LLists is one of:
; – '()
; – (cons LAssoc LLists)
 
; An LAssoc is one of: 
; – '()
; – (cons Association LAssoc)
;
(define LAssoc1 (list (list "Track ID" 2009) (list "Name" "Red Red Wine")))
(define LAssoc2 (list (list "Track ID" 2006) (list "Name" "All Eyes")))
(define LLists (list LAssoc1 LAssoc2))

;total-time/list
;LTracks > time


;find-association
;string LAssoc Any > Assoc
;It produces the first Association whose first item is equal to key, or default if there is no such Association.
(check-expect (find-association "Track ID" LAssoc1 "Nope")
              (list "Track ID" 2009))
(check-expect (find-association "Guitarist" LAssoc1 "Nope")
              "Nope")
(check-expect (find-association "Track ID" '() "Nope") "Nope")
(define (find-association key la default)              
   (cond
     [(empty? la) default]
     [(string=? key (first (first la))) (first la)]
     [else (find-association key (rest la) default)]))

; An Association is a list of two items: 
;   (cons String (cons BSDN '()))
 
; A BSDN is one of: 
; – Boolean
; – Number
; – String
; – Date
 
; String -> LLists
; creates a list of lists representation for all tracks in 
; file-name, which must be an XML export from iTunes 

