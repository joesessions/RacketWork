;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-intermediate-reader.ss" "lang")((modname |EX238 Abstraction|) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))
(require 2htdp/image)
(require 2htdp/universe)
(require racket/math)
(require 2htdp/web-io)

(check-expect (extract > '(1 5 10) 4) '(5 10))
(check-expect (extract > '(1 5 10) 10) '())
(check-expect (extract > '(1 5 10) 0) '(1 5 10))
(check-expect (extract < '(1 5 10) 6) '(1 5))
; fails as it should (check-expect (extract < '(1 5 10) 6) '(5 1))


(define (extract R l t)
  (cond
    [(empty? l) '()]
    [(R (first l) t) (cons (first l) (extract R (rest l) t))]
    [else (extract R (rest l) t)]))

(check-expect (squared>? 5 20) #true)
(check-expect (squared>? 5 25) #false)
(check-expect (squared>? 5 26) #false)

(define (squared>? x c)
  (> (* x x) c))

(check-expect (extract squared>? `(4 7 9) 64) '(9))

;nelon -> num
(check-expect (most > `(9 7 4 11)) 11)
(check-expect (most > `(9 7 4)) 9)
(check-expect (most < `(9 7 4 11)) 4)
(check-expect (most > (list 25 24 23 22 21 20 19 18 17 16 15 14 13
      12 11 10 9 8 7 6 5 4 3 2 1)) 25)
(check-expect (most > (list 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
      17 18 19 20 21 22 23 24 25)) 25)



(define (most C lon)
  (cond
      [(empty? (rest lon)) (first lon)]
      [(C (first lon) (second lon)) (most C (cons (first lon) (rest (rest lon))))]
      [else (most C (rest lon))]))
              
